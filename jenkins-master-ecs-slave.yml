AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation Template to create a Jenkins server on a single EC2 instance and ECS cluster (EC2) with ASG.

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  InstanceTag:
    Type: String
    Default: Jenkins

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
    
  LatestAMIId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  JenkinsEC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: JenkinsEC2Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: [ arn:aws:iam::aws:policy/AmazonECS_FullAccess ]

  JenkinsEC2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: JenkinsEC2Profile
      Roles: 
       - !Ref JenkinsEC2Role

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ECSCluster

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref ECSLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      VPCZoneIdentifier: !Ref Subnets
      Tags:
        - Key: Name
          Value: ECS-Server
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: 'true'

  AutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ECSAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60

  ECSLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref 'ECSAMI'
      InstanceType: !Ref InstanceType
      KeyName: !Ref 'KeyName'
      SecurityGroups:
        - !GetAtt JenkinsAndECSSecurityGroup.GroupId
      IamInstanceProfile: !Ref JenkinsEC2Profile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}


  JenkinsServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAMIId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Tags:
       - Key: Name
         Value: !Ref InstanceTag
      SecurityGroups:
        - !Ref JenkinsAndECSSecurityGroup
      IamInstanceProfile: !Ref JenkinsEC2Profile
      UserData:
        Fn::Base64: |
           #! /bin/bash
           yum update -y
           amazon-linux-extras install java-openjdk11 -y
           wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
           rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
           amazon-linux-extras install epel -y
           yum install jenkins -y
           systemctl start jenkins
           systemctl enable jenkins
           systemctl status jenkins

  JenkinsAndECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ports 22,8080,5000
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0


Outputs:
  JenkinsPublicIp:
    Value: !Join [':', [!GetAtt JenkinsServer.PublicIp, 8080] ]
  JenkinsIntPass:
    Value: !Sub "ssh -i ~/.ssh/adesso.pem ec2-user@${JenkinsServer.PublicIp} sudo cat /var/lib/jenkins/secrets/initialAdminPassword"


